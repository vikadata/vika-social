plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.1.0'
}

apply from: 'lib.gradle'

group = 'cn.vika'
version = '0.0.1-SNAPSHOT'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'vika-social'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Vika Social Sdk'
                description = 'This is a project for vika SaaS'
                url = 'https://github.com/vikadata/vika-social'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://vikadata.mit-license.org'
                    }
                }
                developers {
                    developer {
                        name = 'Bron'
                        email = 'liuzijing@vikadata.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:vikadata/vika-social.git'
                    developerConnection = 'scm:git:git@github.com:vikadata/vika-social.git'
                    url = 'https://github.com/vikadata/vika-social'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = layout.buildDirectory.dir('https://oss.sonatype.org/service/local/staging/deploy/maven2/')
            def snapshotsRepoUrl = layout.buildDirectory.dir('https://oss.sonatype.org/content/repositories/snapshots/')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
        credentials {
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:2.7.6")
        }
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

