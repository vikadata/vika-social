package com.vikadata.social.dingtalk.event.order;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

import com.vikadata.social.dingtalk.annotation.DingTalkEvent;
import com.vikadata.social.dingtalk.enums.DingTalkEventTag;
import com.vikadata.social.dingtalk.enums.DingTalkSyncAction;

/**
 * Event List -- Order Information
 * This data is pushed to the time when the enterprise purchases and activates the application in the DingTalk service market and generates an order,
 * and is inserted into the table open sync biz data.
 */
@Setter
@Getter
@ToString
@DingTalkEvent(value = DingTalkEventTag.SYNC_HTTP_PUSH_HIGH, action = DingTalkSyncAction.MARKET_ORDER)
public class SyncHttpMarketOrderEvent extends BaseOrderEvent {
    /**
     * Specifications support maximum number of users
     */
    private String maxOfPeople;

    /**
     * The specification supports the minimum number of users.
     */
    private String minOfPeople;

    /**
     * Distributor business name.
     * Description: This field is not returned when the articleType is image.
     */
    private String distributorCorpName;

    /**
     * Distributor enterprise corp Id.
     * Description: This field is not returned when the articleType is image.
     */
    private String distributorCorpId;

    /**
     * Payment time (unit: milliseconds).
     */
    private Long paidtime;

    /**
     * Order source:
     * The default order comes from the app center.
     * If the value is TIANYUAN, it means it is from the Tianyuan system platform.
     */
    private String orderCreatSource;

    /**
     * The nominal face fee (unit: cents) is now equal to the pay Fee value.
     * Description This field is not returned when the articleType is image.
     */
    private Long nominalPayFee;

    /**
     * Discount to reduce fees (unit: cents), the present value is 0.
     * Description: This field is not returned when the articleType is image.
     */
    private Long discountFee;

    /**
     * Discount, present value 1.00.
     * Description: This field is not returned when the articleType is image.
     */
    private Double discount;


    /**
     * Order type, value:
     * BUY: new purchase,
     * RENEW: Renew,
     * UPGRADE: upgrade,
     * RENEW UPGRADE: Renewal upgrade,
     * RENEW DEGRADE: Renewal and downgrading
     */
    private String orderType;

    /**
     * Order the Union Id.
     */
    private String unionId;

    /**
     * External order id.
     */
    private String outTradeNo;

    /**
     * The unique identifier of the user in the currently open application.
     */
    private String openId;


    /**
     * purchase type.
     * 1: Organizational Buying,
     * 2: Personal purchases
     */
    private String purchaseType;

    /**
     * Order source channel code.
     */
    private String orderChannelCode;

    /**
     * The channel code entered by the ISV when the product QR code is generated by the developer's back-end product management.
     */
    private String isvOperationCode;

    /**
     * Order charge type (for trial specification only),
     * FREE: open for free,
     * TRYOUT: Trial activation
     */
    private String orderChargeType;

    /**
     * Commodity type, value:
     * normal: normal goods,
     * image: OXM image product.
     * Description OXM products: Unofficial products are included in the mechanism of DingTalk for sale.
     * It is necessary to determine the docking method, and after necessary project establishment and review, it can be integrated into paid DingTalk or sold independently to support products entering the DingTalk selection market.
     */
    private String articleType;

    /**
     * The native product code corresponding to the mirrored product.
     * Note Non-OXM products do not need to pay attention to this field.
     */
    private String originalArticleCode;

    /**
     * The native product code corresponding to the mirrored product.
     * Note: Non-OXM products do not need to pay attention to this field.
     */
    private String originalItemCode;

    /**
     * App ID.
     * Description: This field has a value for in-app purchase orders.
     */
    private String appId;

    /**
     * Order extension parameters.
     */
    private Object extendParam;

    /**
     * The job number of the person placing the order in the company.
     */
    private String buyUserId;

    /**
     * Solution KEY value.
     * Description: This field has a value when the order is a solution.
     */
    private String solutionPackageKey;

    /**
     * Solution name.
     * Description: This field has a value when the order is a solution.
     */
    private String solutionPackageName;

    /**
     * The main organization ID corresponding to the virtual organization of the personal experience version.
     */
    private String mainCorpId;

    /**
     * Auto-transfer to free specs.
     * Note If a paid product has a free specification, after the trial expires, the system will automatically place an order to convert it to a free specification, including this order mark.
     */
    private String autoChangeFreeItem;

    /**
     * order tag, value;
     * 0: Normal order,
     * 1: Free on full order
     */
    private Integer orderLabel;

    /**
     * The paid master order ID associated with the full bonus order.
     */
    private String presentRelMainOrderId;

    /**
     * Opportunity source, the value includes:
     * Workbench - Bottom Recommended,
     * Workbench - group recommendation,
     * Workbench - Group More - Top Recommended Bits,
     * Workbench - Application Icon Recommended,
     * Square - search,
     * Square - banner,
     * Square - Thematic,
     * Square - product recommendation,
     * Application Center - Recommended for new enterprise administrators,
     * Application Center - Search,
     * Application Center-banner,
     * Application Center - Topics,
     * App Center - All Apps (Android),
     * Application Center - Solutions,
     * Personnel area,
     * Developer background - promotion code,
     * PC Application Center,
     */
    private String leadsFrom;

    /**
     * Sales mode, value:
     * CYC_UPGRADE_MEMBER: sold by cycle + quantity (person),
     * CYC_UPGRADE: sell by cycle,
     * QUANTITY: sold by quantity (person)
     */
    private String saleModelType;
}
